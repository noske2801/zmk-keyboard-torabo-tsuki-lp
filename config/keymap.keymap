#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none               &none             &none           &none             &none                                                  &none        &none  &none               &none                  &none                  &none
&none  &kp Q               &kp W             &kp E           &kp R             &kp T                                                  &kp Y        &kp U  &kp I               &kp O                  &kp P                  &none
&none  &kp A               &kp S             &kp D           &kp F             &kp G                 &none             &none          &kp H        &kp J  &kp K               &kp L                  &kp MINUS              &none
&none  &mt LEFT_CONTROL Z  &mt LEFT_SHIFT X  &mt LEFT_ALT C  &kp V             &kp B                 &kp TAB           &kp ESCAPE     &kp N        &kp M  &mt LEFT_ALT COMMA  &mt LEFT_SHIFT PERIOD  &mt LEFT_CONTROL FSLH  &none
&none  &kp LANGUAGE_2      &kp LGUI          &kp LALT        &lt 1 LANGUAGE_2  &mt LEFT_SHIFT SPACE  &lt 3 LANGUAGE_1  &kp BACKSPACE  &lt 2 ENTER  &none  &none               &kp LEFT_GUI           &kp LANGUAGE_1         &none
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4   &trans     &mkp MB5   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans            &trans                      &trans                    &trans           &trans                       &trans           &trans          &trans          &trans           &trans         &trans
&trans  &trans            &kp KP_NUMBER_7             &kp KP_NUMBER_8           &kp KP_NUMBER_9  &kp CARET                    &kp F5           &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp F11        &trans
&trans  &kp KP_NUMBER_0   &kp KP_NUMBER_4             &kp KP_NUMBER_5           &kp KP_NUMBER_6  &kp PERCENT  &trans  &trans  &kp HOME         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END        &trans
&trans  &kp LEFT_CONTROL  &mt LEFT_SHIFT KP_NUMBER_1  &mt LEFT_ALT KP_NUMBER_2  &kp KP_NUMBER_3  &trans       &trans  &trans  &kp KP_MULTIPLY  &kp KP_PLUS     &kp KP_COMMA    &kp KP_DOT       &kp KP_DIVIDE  &trans
&trans  &trans            &trans                      &trans                    &trans           &trans       &trans  &trans  &trans           &trans          &trans          &trans           &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans   &trans   &trans        &trans        &trans                      &trans            &trans     &trans         &trans     &trans      &trans
&trans  &kp F1   &kp F2   &kp F3        &kp F4        &kp F5                      &kp HOME          &kp PG_UP  &kp PAGE_DOWN  &kp END    &kp ESCAPE  &trans
&trans  &kp F6   &kp F7   &kp F8        &kp F9        &kp F10     &trans  &trans  &kp LEFT          &kp DOWN   &kp UP_ARROW   &kp RIGHT  &kp TAB     &trans
&trans  &kp F11  &kp F12  &out OUT_USB  &out OUT_BLE  &bt BT_NXT  &trans  &trans  &kp SINGLE_QUOTE  &kp DQT    &kp GRAVE      &kp TILDE  &kp PIPE    &trans
&trans  &trans   &trans   &trans        &kp DELETE    &kp TAB     &trans  &trans  &trans            &trans     &trans         &trans     &trans      &trans
            >;
        };
    };
};
